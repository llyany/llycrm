<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bjpowernode.crm.workbench.dao.TranDao">

    <delete id="delete">
        delete from tbl_tran
        where id in
        <foreach collection="array" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getHidden" resultType="Tran">
        select

        t.activityId,
        t.contactsId,
        t.customerId

        from tbl_tran t
        left join tbl_customer cus on t.customerId = cus.id
        left join tbl_contacts con on t.contactsId = con.id
        left join tbl_activity a on t.activityId = a.id

        where t.id = #{id}
    </select>

    <update id="update">
        update tbl_tran set

        owner = #{owner},
        money = #{money},
        name = #{name},
        expectedDate = #{expectedDate},
        customerId = #{customerId},
        stage = #{stage},
        type = #{type},
        source = #{source},
        activityId = #{activityId},
        contactsId = #{contactsId},
        createBy = #{createBy},
        createTime = #{createTime},
        editBy = #{editBy},
        editTime = #{editTime},
        description = #{description},
        contactSummary = #{contactSummary},
        nextContactTime = #{nextContactTime}

        where id=#{id}
    </update>

    <select id="getInfo" resultType="Tran">
       select

        t.id,
        t.name,
        cus.name as customerId,
        t.stage,
        t.type,
        t.source,
        t.description,
        t.expectedDate,
        u.name as owner,
        con.fullname as contactsId,
        a.name as activityId

        from tbl_tran t
        left join tbl_user u on t.owner = u.id
        left join tbl_customer cus on t.customerId = cus.id
        left join tbl_contacts con on t.contactsId = con.id
        left join tbl_activity a on t.activityId = a.id

        where t.id=#{id}
    </select>

    <select id="getTranTotal" resultType="int">
         select count(*)

         from tbl_tran t
         left join tbl_user u on t.owner = u.id
         left join tbl_customer cus on t.customerId = cus.id
         left join tbl_contacts con on t.contactsId = con.id
         <where>
             <if test="owner!=null and owner!=''">

                 and u.name like '%' #{owner} '%'

             </if>
             <if test="name!=null and name!=''">

             and t.name like '%' #{name} '%'

         </if>
             <if test="customer!=null and customer!=''">

             and cus.name like '%' #{customer} '%'

         </if>
             <if test="contacts!=null and contacts!=''">

             and con.fullname like '%' #{contacts} '%'

         </if>
             <if test="stage!=null and stage!=''">

             and t.stage like '%' #{stage} '%'

         </if>
             <if test="type!=null and type!=''">

             and t.type like '%' #{type} '%'

         </if>
             <if test="source!=null and source!=''">

             and t.source like '%' #{source} '%'

         </if>
         </where>

    </select>
    <select id="getTranListByCondition" resultType="Tran">
        select

        t.id,
        t.name,
        cus.name as customerId,
        t.stage,
        t.type,
        t.source,
        u.name as owner,
        con.fullname as contactsId

        from tbl_tran t
        left join tbl_user u on t.owner = u.id
        left join tbl_customer cus on t.customerId = cus.id
        left join tbl_contacts con on t.contactsId = con.id
        <where>
            <if test="owner!=null and owner!=''">

                and u.name like '%' #{owner} '%'

            </if>
            <if test="name!=null and name!=''">

                and t.name like '%' #{name} '%'

            </if>
            <if test="customer!=null and customer!=''">

                and cus.name like '%' #{customerId} '%'

            </if>
            <if test="contacts!=null and contacts!=''">

                and con.fullname like '%' #{contactsId} '%'

            </if>
            <if test="stage!=null and stage!=''">

                and t.stage like '%' #{stage} '%'

            </if>
            <if test="type!=null and type!=''">

                and t.type like '%' #{type} '%'

            </if>
            <if test="source!=null and source!=''">

                and t.source like '%' #{source} '%'

            </if>
        </where>
        order by t.createTime desc
        limit #{skipCount},#{pageSize}

    </select>
    <select id="getCharts" resultType="map">

        select

        count(*) as value,stage as name

        from tbl_tran

        group by stage

    </select>

    <select id="getTotal" resultType="int">

        select count(*) from tbl_tran

    </select>

    <update id="updateStage">

        update tbl_tran set stage=#{stage},editBy=#{editBy},editTime=#{editTime}

        where id=#{id}

    </update>

    <select id="detail" resultType="Tran">

        select

        tran.id,
        user.name as owner,
        tran.money,
        tran.name,
        tran.expectedDate,
        cus.name as customerId,
        tran.stage,
        tran.type,
        tran.source,
        act.name as activityId,
        con.fullname as contactsId,
        tran.createBy,
        tran.createTime,
        tran.editBy,
        tran.editTime,
        tran.description,
        tran.contactSummary,
        tran.nextContactTime


        from tbl_tran tran
        join tbl_user user
        on tran.owner=user.id
        join tbl_customer cus
        on tran.customerId=cus.id
        left join tbl_activity act
        on tran.activityId=act.id
        left join tbl_contacts con
        on tran.contactsId=con.id

        where tran.id=#{id}

    </select>

  	<insert id="save">

        insert into tbl_tran(

            id,
            owner,
            money,
            name,
            expectedDate,
            customerId,
            stage,
            type,
            source,
            activityId,
            contactsId,
            createBy,
            createTime,
            description,
            contactSummary,
            nextContactTime


        )

        values(

            #{id},
            #{owner},
            #{money},
            #{name},
            #{expectedDate},
            #{customerId},
            #{stage},
            #{type},
            #{source},
            #{activityId},
            #{contactsId},
            #{createBy},
            #{createTime},
            #{description},
            #{contactSummary},
            #{nextContactTime}

        )


    </insert>

</mapper>

































